#!/usr/bin/env python3
import sys
sys.path.append('../')
sys.path.append('./')
import argparse
import os
import pkg_resources
from scagaire.Scagaire import Scagaire

version = ''
try:
	version = pkg_resources.get_distribution("scagaire").version
except pkg_resources.DistributionNotFound:
	version = 'x.y.z'

parser = argparse.ArgumentParser(
    description = '''Given a species, download all assemblies and add AMR genes to database''',
    usage = 'scagaire_download [options] species',
    formatter_class=argparse.ArgumentDefaultsHelpFormatter)
  
# input  
parser.add_argument('species',  help='Species name, use scagaire_species to see all available', type=str)
parser.add_argument('--assembly_level', '-l',  help='Assembly level', type=str, default='all', choices=['all', 'complete','chromosome', 'scaffold',  'contig'])
parser.add_argument('--refseq_category','-c',  help='Sequencing technology', type=str, default='all', choices=['all','reference','representative'])
parser.add_argument('--threads', '-t',  help='No. of threads', default = 1, type=int)

parser.add_argument('--mash_database', '-m',  help='Mash database for checking assembly species classification, defaults to bundled', type=str)

# Output
parser.add_argument('--output_file', '-o',  help='Output filename', default = 'species_to_genes.tsv', type=str)
parser.add_argument('--output_directory', '-i', help='Working output directory', type=str)

# Advanced
parser.add_argument('--debug', action='store_true', help='Turn on debugging', default = False)
parser.add_argument('--verbose', '-v', action='store_true', help='Turn on verbose output', default = False)
parser.add_argument('--version', action='version', version=str(version))

options = parser.parse_args()

if options.debug:
    import cProfile, pstats, io
    pr = cProfile.Profile()
    pr.enable()
    
    g = ScagaireDownload(options)
    g.run()
    
    pr.disable()
    s = io.StringIO()
    sortby = 'cumulative'
    ps = pstats.Stats(pr, stream=s).sort_stats(sortby)
    ps.print_stats()
    print(s.getvalue())
else:
    g = ScagaireDownload(options) 
    g.run()
